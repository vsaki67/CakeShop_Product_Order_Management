/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Veiw;

/**
 *
 * @author asusx
 */
import Controller.InventoryController;
import Model.Inventory;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class InventoryForm extends javax.swing.JFrame {
    private InventoryController controller;
    
    public InventoryForm() {
        controller = new InventoryController();
        
        initComponents();
        try {
            populateInvoiceTable();
        } catch (Exception e) {
            e.printStackTrace(); 
        }
    }
    
    private void populateInvoiceTable() {
    // Instantiate InventoryController with your database connection
        InventoryController controller = new InventoryController();  // Pass connection if needed
        List<Inventory> productList = controller.getProducts();  // Fetch products list from the controller

    // Get the table model for the inventory table
        DefaultTableModel model = (DefaultTableModel) inventoryTable.getModel();
        model.setRowCount(0);  // Clear existing rows in the table

    // Iterate through the product list and populate the table
    for (Inventory product : productList) {
        // Create row data array from the Inventory object
        Object[] rowData = {product.getCakeId(), product.getName(), product.getStock()};
        // Add row to the table model
        model.addRow(rowData);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cakeId = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        veiwBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        alertBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("INVENTORY FORM");

        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cake ID", "Name", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(inventoryTable);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Cake ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Quantity");

        cakeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cakeIdActionPerformed(evt);
            }
        });

        veiwBtn.setBackground(new java.awt.Color(255, 255, 204));
        veiwBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        veiwBtn.setText("Veiw");
        veiwBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                veiwBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(255, 255, 204));
        updateBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        alertBtn.setBackground(new java.awt.Color(255, 153, 153));
        alertBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        alertBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\asusx\\OneDrive\\Desktop\\Project_Pic\\change Security Question.png")); // NOI18N
        alertBtn.setText("Low Stock");
        alertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alertBtnActionPerformed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(255, 204, 204));
        exitBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        exitBtn.setIcon(new javax.swing.ImageIcon("C:\\Users\\asusx\\OneDrive\\Desktop\\Project_Pic\\exit small.png")); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cakeId)
                            .addComponent(name)
                            .addComponent(quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(veiwBtn)
                        .addGap(83, 83, 83)
                        .addComponent(updateBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(exitBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(alertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cakeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(veiwBtn)
                    .addComponent(updateBtn))
                .addGap(37, 37, 37)
                .addComponent(alertBtn)
                .addGap(18, 18, 18)
                .addComponent(exitBtn)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void veiwBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_veiwBtnActionPerformed
        try {
            int idCake = Integer.parseInt(cakeId.getText());
            Inventory inven = controller.getInventoryByCakeId(idCake);
            if (inven != null) {
                name.setText(inven.getName());
                quantity.setText(String.valueOf(inven.getStock()));
            } else {
                JOptionPane.showMessageDialog( this,"Product not found.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid product ID.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage());
        }
    }//GEN-LAST:event_veiwBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
                // Parse input values
                int cakeID = Integer.parseInt(cakeId.getText());
                String Name = name.getText();
                int quan = Integer.parseInt(quantity.getText());

                // Call the controller to update inventory
                boolean success = controller.updateInventoryStock(cakeID, quan, Name);

                // Show feedback based on the success of the update
                if (success) {
                    JOptionPane.showMessageDialog( this,"Inventory updated successfully!");
                    //showAlert(Alert.AlertType.INFORMATION, "Success", "Inventory updated successfully!");
                } else {
                    JOptionPane.showMessageDialog( this,"Failed to update inventory.");
                    //showAlert(Alert.AlertType.ERROR, "Failure", "Failed to update inventory.");
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog( this,"Invalid input. Please enter valid numbers for Cake ID and Quantity.");
                //showAlert(Alert.AlertType.ERROR, "Error", "Invalid input. Please enter valid numbers for Cake ID and Quantity.");
            }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void cakeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cakeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cakeIdActionPerformed

    private void alertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alertBtnActionPerformed
        //InventoryController controller = new InventoryController(); // Instantiate the controller
        List<Inventory> productList = controller.getProducts(); // Fetch the products

        // Call the checkLowStock method
        List<String> lowStockProducts = controller.checkLowStock(productList);

        // Show alert if there are low stock products
        if (!lowStockProducts.isEmpty()) {
            StringBuilder message = new StringBuilder("Low stock products:\n");
            for (String productName : lowStockProducts) {
                message.append(productName).append("\n");
            }
            JOptionPane.showMessageDialog(null, message.toString(), "Low Stock Alert", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "All products are sufficiently stocked.", "Stock Check", JOptionPane.INFORMATION_MESSAGE);
        }
    
    }//GEN-LAST:event_alertBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alertBtn;
    private javax.swing.JTextField cakeId;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton veiwBtn;
    // End of variables declaration//GEN-END:variables
}
